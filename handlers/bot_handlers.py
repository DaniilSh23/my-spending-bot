import datetime
from _decimal import Decimal

import pyrogram
import pytz
from pyrogram import Client, filters
from pyrogram.types import Message, CallbackQuery

from filters.bot_filters import get_day_pending_filter
from keyboards.bot_keyboards import ADMIN_KBRD, HEADPAGE_RBRD
from settings.config import MY_LOGGER, ADMIN_LOGIN, ADMIN_PASS
from utils.req_to_project_api import start_bot_post_request, get_settings, get_day_spending


@Client.on_message(filters.command('start'))
async def start_handler(client: pyrogram.Client, update: Message):
    """
    –•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –∫–æ–º–∞–Ω–¥—ã start
    """
    MY_LOGGER.debug(f'–ö–∏–¥–∞–µ–º —Å—Ç–∞—Ä—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –∫ –∞–ø–∏')
    start_req_rslt = await start_bot_post_request(
        tlg_id=update.from_user.id,
        tlg_username=update.from_user.username if update.from_user.username else None,
        first_name=update.from_user.first_name if update.from_user.first_name else None,
        last_name=update.from_user.last_name if update.from_user.last_name else None,
        language_code=update.from_user.language_code if update.from_user.language_code else None,
    )

    MY_LOGGER.debug(f'–ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–æ–≤')
    get_adm_status, admins_lst = await get_settings(setting_key='bot_admin')
    if get_adm_status != 200:
        MY_LOGGER.error(f'–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–æ–≤. –û—Ç–≤–µ—Ç: {get_adm_status, admins_lst}')
    else:
        MY_LOGGER.debug(f'–°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–æ–≤ –ø–æ–ª—É—á–µ–Ω.')

    if start_req_rslt != 200:
        MY_LOGGER.error(f'–£ –±–æ—Ç–∞ —á—Ç–æ-—Ç–æ –Ω–µ–∏—Å–ø—Ä–∞–≤–Ω–æ. –ü–æ–ª–æ–º–∫–∞ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–æ–≤–æ–º –∑–∞–ø—Ä–æ—Å–µ –∫ –∞–ø–∏. –°—Ç–∞—Ç—É—Å –∫–æ–¥={start_req_rslt}')
        await update.reply_text(text=f'üöß –£ –±–æ—Ç–∞ —á—Ç–æ-—Ç–æ –Ω–µ–∏—Å–ø—Ä–∞–≤–Ω–æ...\n'
                                     f'üëå –ú—ã —É–∂–µ —Ä–µ—à–∞–µ–º —ç—Ç—É –ø—Ä–æ–±–ª–µ–º—É, —Å–∫–æ—Ä–æ –≤—Å—ë –±—É–¥–µ—Ç –æ–∫.')

        if get_adm_status == 200:
            MY_LOGGER.debug(f'–û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∞–º –æ –Ω–µ–∏—Å–ø—Ä–∞–≤–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞')
            for i_admin_id in admins_lst.get("result"):
                await client.send_message(
                    text=f'üõ∞–•—å—é—Å—Ç–æ–Ω, —É –Ω–∞—Å –ø—Ä–æ–±–ª–µ–º–∞‚ÄºÔ∏è\n–£ –±–æ—Ç–∞ —á—Ç–æ-—Ç–æ –Ω–µ–∏—Å–ø—Ä–∞–≤–Ω–æ. –ü–æ–ª–æ–º–∫–∞ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–æ–≤–æ–º –∑–∞–ø—Ä–æ—Å–µ. '
                         f'–°—Ç–∞—Ç—É—Å –∫–æ–¥={start_req_rslt}',
                    chat_id=int(i_admin_id),
                )
            return

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
    await update.reply_text(
        text=f'üëá –ñ–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã <b>–≤–Ω–µ—Å—Ç–∏ —Å—É–º–º—É —Ç—Ä–∞—Ç</b>',
        reply_markup=HEADPAGE_RBRD,
    )

    # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –≤—Ö–æ–¥–∞ –≤ –∞–¥–º–∏–Ω–∫—É –¥–ª—è –∞–¥–º–∏–Ω–æ–≤
    if get_adm_status == 200 and str(update.from_user.id) in admins_lst.get("result"):
        MY_LOGGER.debug(f'–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞–¥–º–∏–Ω—É –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—Ö–æ–¥–∞ –≤ –∞–¥–º–∏–Ω–∫—É')
        await update.reply_text(
            text=f'–î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞ –≤ –∞–¥–º–∏–Ω–∫—É: <code>{ADMIN_LOGIN}</code> | <code>{ADMIN_PASS}</code>',
            reply_markup=ADMIN_KBRD
        )


@Client.on_callback_query(get_day_pending_filter)
async def get_day_spending_handler(client: pyrogram.Client, update: CallbackQuery):
    """
    –•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞—Å—Ö–æ–¥–æ–≤ –∑–∞ –¥–µ–Ω—å.
    """
    MY_LOGGER.debug(f'–ê–ø–¥–µ–π—Ç –≤ —Ö—ç–Ω–¥–ª–µ—Ä–µ –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞—Å—Ö–æ–¥–æ–≤ –∑–∞ –¥–µ–Ω—å –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {update.from_user.id}')
    resp_status, resp_data = await get_day_spending(tlg_id=str(update.from_user.id))

    if resp_status != 200:
        MY_LOGGER.debug(f'–°—Ç–∞—Ç—É—Å-–∫–æ–¥ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –∑–∞–ø—Ä–æ—Å –æ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ä–∞—Å—Ö–æ–¥–æ–≤ –∑–∞ –¥–µ–Ω—å == {resp_status}')
        await update.edit_message_text(
            text=f'üöß –ù–µ—É–¥–∞—á–Ω—ã–π –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç—Ä–∞—Ç –∑–∞ –¥–µ–Ω—å.\nüõ† –£ –±–æ—Ç–∞ —á—Ç–æ-—Ç–æ —Å–ª–æ–º–∞–ª–æ—Å—å, –Ω–∞–¥–æ —á–∏–Ω–∏—Ç—å.',
            reply_markup=HEADPAGE_RBRD,
        )
        return

    MY_LOGGER.debug(f'–í—ã–ø–æ–ª–Ω—è–µ–º –ø–æ–¥—Å—á—ë—Ç —Ç—Ä–∞—Ç.')
    spend_stat = {'total': 0}
    for i_spend in resp_data:
        categ_name = i_spend.get("category")
        if spend_stat.get(categ_name):
            spend_stat[i_spend.get("category")] += float(i_spend.get("amount"))
        else:
            spend_stat[i_spend.get("category")] = float(i_spend.get("amount"))
        spend_stat["total"] += float(i_spend.get("amount"))

    MY_LOGGER.debug(f'–§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è')
    date_now = datetime.datetime.now(tz=pytz.timezone("Europe/Moscow")).strftime("%d.%m.%Y")
    time_now = datetime.datetime.now(tz=pytz.timezone("Europe/Moscow")).strftime("%H:%M:%S")
    msg_txt = f'üí≥ <b>–¢—Ä–∞—Ç—ã –∑–∞ {date_now} –ø–æ —Å–æ—Å—Ç–æ—è–Ω–∏—é –Ω–∞ {time_now}</b>\n\n'
    for i_categ, i_amount in spend_stat.items():
        if i_categ == 'total':
            msg_txt = ''.join([msg_txt, f'üîπ <b>–í—Å–µ–≥–æ —Ç—Ä–∞—Ç: {Decimal(i_amount).quantize(Decimal("0.01"))} —Ä—É–±.</b>\n\n'])
            continue
        msg_txt = ''.join([msg_txt, f'{i_categ}: {Decimal(i_amount).quantize(Decimal("0.01"))} —Ä—É–±.\n'])

    MY_LOGGER.debug(f'–ò–∑–º–µ–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ç–µ–ª–µ–≥–µ, –≤—Å—Ç–∞–≤–ª—è—è –≤ –Ω–µ–≥–æ —Ç–µ–∫—Å—Ç —Ç—Ä–∞—Ç –∑–∞ —Å–µ–≥–æ–¥–Ω—è')
    await update.edit_message_text(
        text=msg_txt,
        reply_markup=HEADPAGE_RBRD,
    )


@Client.on_message()
async def test_handler(client, update):
    """
    –ü–æ–ª—É—á–∞–µ–º –∞–ø–¥–µ–π—Ç—ã
    """
    # MY_LOGGER.debug(f'–ü–æ–ª—É—á–µ–Ω –∞–ø–¥–µ–π—Ç –≤ —Ç–µ—Å—Ç–æ–≤–æ–º —Ö—ç–Ω–¥–ª–µ—Ä–µ')
    # MY_LOGGER.debug(update)
